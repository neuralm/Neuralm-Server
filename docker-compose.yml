version: '3'
services:
    web:
        build: 
            context: .
            dockerfile: neuralm-web.DockerFile
            args:
                - VUE_APP_MESSAGEQUEUE_HOST=${VUE_APP_MESSAGEQUEUE_HOST}
                - VUE_APP_MESSAGEQUEUE_PORT=${VUE_APP_MESSAGEQUEUE_PORT}
        depends_on: 
            - "messagequeue"
        ports:
            - "3333:443"
        networks:
            - neuralm-network
        image: glovali/web:latest
        volumes:
            - /etc/ssl/neuralm.net:/etc/ssl/neuralm.net
    messagequeue:
        build: 
            context: .
            dockerfile: neuralm-messagequeue.DockerFile
            args:
                - CERTIFICATE_PATH=${CERTIFICATE_PATH}
                - CERTIFICATE_PASSWORD=${CERTIFICATE_PASSWORD}
        ports:
            - "5000:5000"
            - "5001:5001"
        networks:
            - neuralm-network
        image: glovali/messagequeue:latest
        volumes:
            - /etc/ssl/neuralm.net:/etc/ssl/neuralm.net
    registryservice:
        build: 
            context: .
            dockerfile: neuralm-registryservice.DockerFile
        depends_on: 
            - "messagequeue"
            - "registrydb"
        ports:
            - "5002:80"
        environment:
            WAIT_HOSTS: messagequeue:5001, registrydb:1433
        networks:
            - neuralm-network
        image: glovali/registryservice:latest
    userservice:
        build: 
            context: .
            dockerfile: neuralm-userservice.DockerFile
        depends_on: 
            - "registryservice"
            - "userdb"
        ports:
            - "5003:80"
        environment:
            WAIT_HOSTS: userdb:1433
        networks:
            - neuralm-network
        image: glovali/userservice:latest
    trainingroomservice:
        build: 
            context: .
            dockerfile: neuralm-trainingroomservice.DockerFile
        depends_on: 
            - "registryservice"
            - "trainingroomdb"
        ports:
            - "5004:80"
        environment:
            WAIT_HOSTS: trainingroomdb:1433
        networks:
            - neuralm-network
        image: glovali/trainingroomservice:latest
    userdb:
        image: "mcr.microsoft.com/mssql/server:2019-CU1-ubuntu-16.04"
        environment:
            SA_PASSWORD: ${USER_DB_SA_PASSWORD}
            ACCEPT_EULA: "Y"
        networks:
            - neuralm-network
    registrydb:
        image: "mcr.microsoft.com/mssql/server:2019-CU1-ubuntu-16.04"
        environment:
            SA_PASSWORD: ${REGISTRY_DB_SA_PASSWORD}
            ACCEPT_EULA: "Y"
        networks:
            - neuralm-network
    trainingroomdb:
        image: "mcr.microsoft.com/mssql/server:2019-CU1-ubuntu-16.04"
        environment:
            SA_PASSWORD: ${TRAININGROOM_DB_SA_PASSWORD}
            ACCEPT_EULA: "Y"
        networks:
            - neuralm-network
networks:
    neuralm-network:
        driver: bridge